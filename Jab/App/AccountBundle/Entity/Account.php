<?php
namespace Jab\App\AccountBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Jab\Config\EntityBundle\Annotation as JAB;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;

/**
 * Account
 * Autogenerated: 2014-09-16 19:13:25
 *
 *  @JAB\Entity(
 *     managedEntity=true,
 *     type="CUSTOM"
 * )
 * @ORM\Table(name="account")
 * @ORM\Entity
 */
class Account extends \Jab\Config\EntityBundle\Entity\Presets\JabEntityTimestampable
{
    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=64, nullable=false, unique=false)
     * ---(CUSTOM ANNOTATIONS)---
     * we will put account name here
     */
    private $name;

    /**
     * @var integer
     *
     * @ORM\Column(name="type", type="smallint", length=32, nullable=true, unique=false)
     */
    private $type;

    /**
     * @var string
     *
     * @ORM\Column(name="vatid", type="string", length=16, nullable=true, unique=false)
     */
    private $vatId;

    /**
     * @var Collection
     *
     * @ORM\OneToMany(targetEntity="Adi\TestBundle\Entity\Address", mappedBy="account")
     */
    private $addresses;


    /**
     * Set name
     *
     * @param string $name
     * @return Account
     */
    public function setName($name) {
        $this->name = $name;
        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName() {
        return $this->name;
    }

    /**
     * Set type
     *
     * @param integer $type
     * @return Account
     */
    public function setType($type) {
        $this->type = $type;
        return $this;
    }

    /**
     * Get type
     *
     * @return integer
     */
    public function getType() {
        return $this->type;
    }

    /**
     * Set vatId
     *
     * @param string $vatId
     * @return Account
     */
    public function setVatId($vatId) {
        $this->vatId = $vatId;
        return $this;
    }

    /**
     * Get vatId
     *
     * @return string
     */
    public function getVatId() {
        return $this->vatId;
    }

    /**
     * Add addresses - X
     *
     * @param \Adi\TestBundle\Entity\Address $addresses
     * @return Account
     */
    public function addAddress(\Adi\TestBundle\Entity\Address $addresses) {
        $this->addresses[] = $addresses;
        //we can do something funky
        return $this;
    }

    /**
     * Remove addresses
     *
     * @param \Adi\TestBundle\Entity\Address $addresses
     */
    public function removeAddress(\Adi\TestBundle\Entity\Address $addresses) {
        $this->addresses->removeElement($addresses);
    }

    /**
     * Get addresses
     *
     * @return Collection
     */
    public function getAddresses() {
        return $this->addresses;
    }

    /** --- CUSTOM METHODS BEGIN --- */

    /**
     * Constructor
     */
    public function __construct() {
        $this->addresses = new ArrayCollection();
    }

	/**
	 * @return string
	 */
	public function getTypeDesc() {
		$types = ["Owner", "Client", "Supplier", "Governmental"];
		return(isset($types[$this->type]) ? $types[$this->type] : "Unknown");
	}

    /** --- CUSTOM METHODS END --- */
}
